# -*- coding: utf-8 -*-


def even_fibonacci_numbers(exceed_number):
    """
    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not
     exceed four million, find the sum of the even-valued terms.
    """
    fibonaccis = [1, 2]
    even_fibonaccis = [2]
    while (fibonaccis[-1] + fibonaccis[-2]) < exceed_number:
        next_fib_number = fibonaccis[-1] + fibonaccis[-2]
        fibonaccis.append(next_fib_number)
        if next_fib_number % 2 == 0:
            even_fibonaccis.append(next_fib_number)
    return sum(even_fibonaccis)


print even_fibonacci_numbers(4000000)
